# Generated by Django 4.1 on 2022-12-12 16:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('enrollment_no', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('email', models.TextField()),
                ('mob', models.PositiveIntegerField()),
                ('role', models.CharField(choices=[('des', 'Designer'), ('dev', 'Developer')], default='dev', max_length=3)),
                ('year', models.IntegerField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('enrollment_no', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('mob', models.PositiveIntegerField()),
                ('role', models.CharField(choices=[('des', 'Designer'), ('dev', 'Developer')], default='dev', max_length=3)),
                ('cg', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.IntegerField(primary_key=True, serialize=False)),
                ('project_name', models.CharField(max_length=200)),
                ('details', models.TextField()),
                ('marks', models.IntegerField()),
                ('remarks', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Recruitment_season',
            fields=[
                ('year', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('role', models.CharField(choices=[('des', 'Designer'), ('dev', 'Developer')], default='dev', max_length=3)),
                ('start', models.DateTimeField(auto_now_add=True)),
                ('end', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Rounds',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('w', 'Written Test'), ('i', 'Interview'), ('p', 'Project')], default='w', max_length=1)),
                ('season_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_year', to='recruitments.recruitment_season')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('weightage', models.FloatField()),
                ('round_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_id', to='recruitments.rounds')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('mark', models.FloatField()),
                ('assignee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignee_enrollment_no', to=settings.AUTH_USER_MODEL)),
                ('section_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_id', to='recruitments.section')),
            ],
        ),
        migrations.CreateModel(
            name='Interview_panel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('panel_name', models.TextField()),
                ('room_no', models.IntegerField()),
                ('status', models.CharField(choices=[('in', 'Inactive'), ('oc', 'Occupied'), ('id', 'Idle')], default='in', max_length=2)),
                ('panelist', models.ManyToManyField(related_name='panelist_enrollment_no', to=settings.AUTH_USER_MODEL)),
                ('season_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interview_year', to='recruitments.recruitment_season')),
            ],
        ),
        migrations.CreateModel(
            name='Candidate_round',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test', models.BooleanField()),
                ('remark', models.TextField()),
                ('status', models.CharField(choices=[('NN', 'Not Notified'), ('N', 'Notified'), ('WR', 'In waiting room'), ('IN', 'In Interview'), ('C', 'Complete'), ('AB', 'Absent')], default='NN', max_length=2)),
                ('time_slot', models.CharField(max_length=255)),
                ('applicant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='round_enrollment_no', to='recruitments.applicant')),
                ('interview_panel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='panel_id', to='recruitments.interview_panel')),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_project', to='recruitments.project')),
                ('round_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='round_id', to='recruitments.rounds')),
                ('season_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_id', to='recruitments.recruitment_season')),
            ],
        ),
        migrations.CreateModel(
            name='Candidate_marks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checked', models.BooleanField(default=False)),
                ('marks', models.FloatField()),
                ('remarks', models.TextField()),
                ('applicant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applicant_enrollment_no', to='recruitments.applicant')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_mark_id', to='recruitments.question')),
            ],
        ),
        migrations.AddField(
            model_name='applicant',
            name='round_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applicant_id', to='recruitments.rounds'),
        ),
    ]
